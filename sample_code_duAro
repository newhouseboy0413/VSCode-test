.PROGRAM program1()
; =================================================================
; STEP 1: 撮影位置へ移動 (GUIの "photo position" に相当)
; =================================================================
    JMOVE #photo_position   ; 事前にティーチングした撮影位置へ各軸補間動作で移動 [cite: 2599, 3252]
    BREAK                   ; 移動完了まで待機 [cite: 2610]

; =================================================================
; STEP 2: カメラキャリブレーションの実行 (GUIの "Measure 1" に相当)
; この部分は「ASを利用したビジョンプログラミングマニュアル」P.11のサンプルを基にしています [cite: 178]。
; =================================================================
    ; --- キャリブレーション用パラメータ設定 ---
    .cam_no   = 1           ; STEP3で確認したカメラ番号を指定 [cite: 181, 196]
    .mes_no   = 67          ; STEP3で確認した計測番号を指定 [cite: 182, 196]
    .dist     = 30          ; キャリブレーション時のロボット移動距離(mm) [cite: 183]
    .robot    = 1           ; ロボット番号 (1:下アーム, 2:上アーム) [cite: 184, 198]
    .handeye  = 1           ; 1:ハンドアイカメラ, 0:固定カメラ [cite: 187, 199]
    .nige     = 0           ; 障害物を避けるためのZ方向の逃げ高さ(mm) [cite: 188]
    .tool_x   = -100        ; STEP1-2で確認したフランジから見たツールのX座標(mm) [cite: 190, 201]
    .tool_y   = 50          ; STEP1-2で確認したフランジから見たツールのY座標(mm) [cite: 191, 201]

    ; --- ツールとターゲットの位置変数を設定 ---
    POINT .tool_p = TRANS(.tool_x, .tool_y) ; ツール座標を定義 [cite: 192]
    POINT .target = target_pos             ; STEP1で作成したターゲット位置変数を指定 [cite: 193, 202]

    ; --- キャリブレーション実行 ---
    CALL vcalib_exe(.robot, .cam_no, .mes_no, .handeye, .&target, .dist, .nige, .&tool_p, .ret) [cite: 205]

    ; --- エラーチェック ---
    IF .ret <> 0 THEN
        PAUSE               ; キャリブレーションエラーが発生した場合、プログラムを一時停止 [cite: 207]
    END

; =================================================================
; STEP 3: 後続動作 (GUIの "Move 1", "Move 2", "home position" に相当)
; =================================================================
    JMOVE #move1            ; 次の作業位置1へ移動
    2: JMOVE #move2        ; 【上アーム】次の作業位置2へ移動（アーム2の命令は先頭に"2:"を記述）[cite: 1962, 2291]
    JMOVE #home_position    ; ホームポジションへ復帰

.END
